cwlVersion: v1.0
class: Workflow
id: kfdrc-gatk-haplotypecaller-workflow
label: Kids First DRC GATK HaplotypeCaller CRAM to gVCF Workflow
doc: |
  This workflow taks a CRAM file, converts it to a BAM, determines a contamination value, then runs
  GATK HaplotypeCaller to generate a gVCF, gVCF calling metrics, and, if no contamination value is provided,
  the VerifyBAMID output.

  ![data service logo](https://github.com/d3b-center/d3b-research-workflows/raw/master/doc/kfdrc-logo-sm.png)

  This workflow is the current production workflow, equivalent to this [Cavatica public app](https://cavatica.sbgenomics.com/public/apps#cavatica/apps-publisher/kfdrc-gatk-haplotypecaller-workflow)

  ### Inputs
  ```yaml
  inputs:
    input_cram: { type: 'File', doc: "Input CRAM file" }
    biospecimen_name: { type: 'string', doc: "String name of biospcimen" }
    output_basename: { type: 'string', doc: "String to use as the base for output filenames" }
    reference_tar: { type: 'File', doc: "Tar file containing a reference fasta and, optionally, its complete set of associated indexes (samtools, bwa, and picard)" }
    dbsnp_vcf: { type: 'File', doc: "dbSNP vcf file" }
    dbsnp_idx: { type: 'File?', doc: "dbSNP vcf index file" }
    contamination: { type: 'float?', doc: "Precalculated contamination value. Providing the value here will skip the run of VerifyBAMID and use the provided value as ground truth." }
    contamination_sites_bed: { type: 'File?', doc: ".Bed file for markers used in this analysis,format(chr\tpos-1\tpos\trefAllele\taltAllele)" }
    contamination_sites_mu: { type: 'File?', doc: ".mu matrix file of genotype matrix" }
    contamination_sites_ud: { type: 'File?', doc: ".UD matrix file from SVD result of genotype matrix" }
    wgs_calling_interval_list: { type: 'File', doc: "WGS interval list used to aid scattering Haplotype caller" }
    wgs_evaluation_interval_list: { type: 'File', doc: "Target intervals to restrict gvcf metric analysis (for VariantCallingMetrics)" }
  ```

  #### Example Input
  ```yaml
  input_cram:
    class: File
    path: /path/to/input.cram
  biospecimen_name: bio_name_test
  output_basename: base_name_test
  reference_tar:
    class: File
    path: /path/to/Homo_sapiens_assembly38.tgz
  dbsnp_vcf:
    class: File
    path: /path/to/Homo_sapiens_assembly38.dbsnp138.vcf
  contamination: 0.009684
  wgs_calling_interval_list:
    class: File
    path: /path/to/wgs_calling_regions.hg38.interval_list
  wgs_evaluation_interval_list:
    class: File
    path: /path/to/wgs_evaluation_regions.hg38.interval_list
  ```

  ### Outputs
  gvcf: The germline variants calls in VCF format
  gvcf_calling_metrics: Various metrics from the creation of the gVCF 
  verifybamid_output: If contamination is calculated rather than handed in by the user, the workflow will provide the output from verifybamid

  ### Tips for running:
  1. For contamination input, either populate the `contamination` field or provide the three contamination
     files: `contamination_sites_bed`, `contamination_sites_mu`, and `contamination_sites_ud`. Failure to
     provide one of these groups will result in a failed run.
  1. Suggested reference inputs (available from the [Broad Resource Bundle](https://console.cloud.google.com/storage/browser/genomics-public-data/resources/broad/hg38/v0)):
      - contamination_sites_bed: Homo_sapiens_assembly38.contam.bed
      - contamination_sites_mu: Homo_sapiens_assembly38.contam.mu
      - contamination_sites_ud: Homo_sapiens_assembly38.contam.UD
      - dbsnp_vcf: Homo_sapiens_assembly38.dbsnp138.vcf
      - reference_tar: Homo_sapiens_assembly38.tgz
  1. The input for the reference_tar must be a tar file containing the reference fasta along with its indexes.
     The required indexes are `[.64.ann,.64.amb,.64.bwt,.64.pac,.64.sa,.dict,.fai]` and are generated by bwa, picard, and samtools.
     Additionally, an `.64.alt` index is recommended.
  1. If you are making your own bwa indexes make sure to use the `-6` flag to obtain the `.64` version of the
     indexes. Indexes that do not match this naming schema will cause a failure in certain runner ecosystems.
  1. Should you decide to create your own reference indexes and omit the ALT index file from the reference,
     or if its naming structure mismatches the other indexes, then your alignments will be equivalent to the results you would
     obtain if you run BWA-MEM with the -j option.

  ![WF Visualized](https://github.com/kids-first/kf-alignment-workflow/blob/master/docs/kfdrc_gatk_hc_wf.png?raw=true "CRAM to gVCF Workflow diagram")


requirements:
- class: ScatterFeatureRequirement
- class: MultipleInputFeatureRequirement
- class: SubworkflowFeatureRequirement

inputs:
  input_cram: {type: 'File', doc: "Input CRAM file"}
  biospecimen_name: {type: 'string', doc: "String name of biospcimen"}
  output_basename: {type: 'string', doc: "String to use as the base for output filenames"}
  reference_tar: {type: 'File', doc: "Tar file containing a reference fasta and, optionally,\
      \ its complete set of associated indexes (samtools, bwa, and picard)", sbg:suggestedValue: {
      class: File, path: 5f3161b8e4b09d9a7b5f4fc9, name: Homo_sapiens_assembly38.tgz}}
  dbsnp_vcf: {type: 'File', doc: "dbSNP vcf file", sbg:suggestedValue: {class: File,
      path: 5d9f63e9e4b03edc89a24c91, name: Homo_sapiens_assembly38.dbsnp138.vcf}}
  dbsnp_idx: {type: 'File?', doc: "dbSNP vcf index file", sbg:suggestedValue: {class: File,
      path: 5f3161b7e4b09d9a7b5f4fb7, name: Homo_sapiens_assembly38.dbsnp138.vcf.idx}}
  contamination: {type: 'float?', doc: "Precalculated contamination value. Providing\
      \ the value here will skip the run of VerifyBAMID and use the provided value\
      \ as ground truth."}
  contamination_sites_bed: {type: 'File?', doc: ".Bed file for markers used in this\
      \ analysis,format(chr\tpos-1\tpos\trefAllele\taltAllele)", sbg:suggestedValue: {
      class: File, path: 5f3161b7e4b09d9a7b5f4fae, name: Homo_sapiens_assembly38.contam.bed}}
  contamination_sites_mu: {type: 'File?', doc: ".mu matrix file of genotype matrix",
    sbg:suggestedValue: {class: File, path: 5f3161b7e4b09d9a7b5f4fb1, name: Homo_sapiens_assembly38.contam.mu}}
  contamination_sites_ud: {type: 'File?', doc: ".UD matrix file from SVD result of\
      \ genotype matrix", sbg:suggestedValue: {class: File, path: 5f3161b7e4b09d9a7b5f4fb4,
      name: Homo_sapiens_assembly38.contam.UD}}
  wgs_calling_interval_list: {type: 'File', doc: "WGS interval list used to aid scattering\
      \ Haplotype caller", sbg:suggestedValue: {class: File, path: 5f3161b8e4b09d9a7b5f4fcc,
      name: wgs_calling_regions.hg38.interval_list}}
  wgs_evaluation_interval_list: {type: 'File', doc: "Target intervals to restrict\
      \ gvcf metric analysis (for VariantCallingMetrics)", sbg:suggestedValue: {class: File,
      path: 5d9f63e9e4b03edc89a24c9c, name: wgs_evaluation_regions.hg38.interval_list}}

outputs:
  gvcf: {type: File, outputSource: picard_mergevcfs_python_renamesample/output}
  gvcf_calling_metrics: {type: 'File[]', outputSource: picard_collectgvcfcallingmetrics/output}
  verifybamid_output: {type: File?, outputSource: verifybamid_checkcontam_conditional/output}

steps:
  untar_reference:
    run: ../tools/untar_indexed_reference.cwl
    in:
      reference_tar: reference_tar
    out: [fasta, fai, dict, alt, amb, ann, bwt, pac, sa]

  bundle_secondaries:
    run: ../tools/bundle_secondaryfiles.cwl
    in:
      primary_file: untar_reference/fasta
      secondary_files:
        source: [untar_reference/fai, untar_reference/dict, untar_reference/alt, untar_reference/amb,
          untar_reference/ann, untar_reference/bwt, untar_reference/pac, untar_reference/sa]
        linkMerge: merge_flattened
    out: [output]

  index_dbsnp:
    run: ../tools/gatk_indexfeaturefile.cwl
    in:
      input_file: dbsnp_vcf
      input_index: dbsnp_idx
    out: [output]

  picard_intervallisttools:
    run: ../tools/picard_intervallisttools.cwl
    in:
      interval_list: wgs_calling_interval_list
    out: [output]

  samtools_cram_to_bam:
    run: ../tools/samtools_cram_to_bam.cwl
    in:
      input_cram: input_cram
      output_basename: output_basename
      reference: bundle_secondaries/output
    out: [output]

  verifybamid_checkcontam_conditional:
    run: ../tools/verifybamid_contamination_conditional.cwl
    in:
      input_bam: samtools_cram_to_bam/output
      ref_fasta: bundle_secondaries/output
      contamination_sites_ud: contamination_sites_ud
      contamination_sites_mu: contamination_sites_mu
      contamination_sites_bed: contamination_sites_bed
      precalculated_contamination: contamination
      output_basename: output_basename
    out: [output, contamination]

  gatk_haplotypecaller:
    run: ../tools/gatk_haplotypecaller.cwl
    in:
      contamination: verifybamid_checkcontam_conditional/contamination
      input_bam: samtools_cram_to_bam/output
      interval_list: picard_intervallisttools/output
      reference: bundle_secondaries/output
    scatter: [interval_list]
    out: [output]

  picard_mergevcfs_python_renamesample:
    run: ../tools/picard_mergevcfs_python_renamesample.cwl
    in:
      input_vcf: gatk_haplotypecaller/output
      output_vcf_basename: output_basename
      biospecimen_name: biospecimen_name
    out: [output]

  picard_collectgvcfcallingmetrics:
    run: ../tools/picard_collectgvcfcallingmetrics.cwl
    in:
      dbsnp_vcf: index_dbsnp/output
      final_gvcf_base_name: output_basename
      input_vcf: picard_mergevcfs_python_renamesample/output
      reference_dict: untar_reference/dict
      wgs_evaluation_interval_list: wgs_evaluation_interval_list
    out: [output]

$namespaces:
  sbg: https://sevenbridges.com
hints:
- class: 'sbg:AWSInstanceType'
  value: c5.9xlarge;ebs-gp2;850
- class: 'sbg:maxNumberOfParallelInstances'
  value: 4
sbg:license: Apache License 2.0
sbg:publisher: KFDRC
sbg:categories:
- CRAM
- DNASEQ
- GATK
- GVCF
- HAPLOTYPECALLER
- WGS
sbg:links:
- id: 'https://github.com/kids-first/kf-alignment-workflow/releases/tag/v2.5.0'
  label: github-release
